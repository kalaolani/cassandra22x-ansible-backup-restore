---
# original pure Ansible rsync
# - name: rsync hardlink local snapshot files back to the keyspace for all column families data directories on disk
  # synchronize:
    # src: "{{ cassandra22x_data_path }}/{{ keyspace_name }}/{{ item }}/snapshots/{{ snapshot_name }}/"
    # dest: "{{ cassandra22x_data_path }}/{{ keyspace_name }}/{{ item }}/"
    # rsync_opts:
        # - "--no-motd"
        # - "--exclude=manifest.json"
        # - "--link-dest={{ cassandra22x_data_path }}/{{ keyspace_name }}/{{ item }}"
  # with_items: "{{ column_families_disk }}"
  # delegate_to: "{{ inventory_hostname }}"

# faster bash rsync
- name: "run rsync_local_snapshots_for_keyspace.sh script for each column_families_disk for {{ keyspace_name }}"
  script: rsync_local_snapshots_for_keyspace.sh {{ cassandra22x_data_path }}/{{ keyspace_name }}/{{ item }} {{ cassandra22x_data_path }}/{{ keyspace_name }}/{{ item }}/snapshots/{{ snapshot_name }}/ {{ cassandra22x_data_path }}/{{ keyspace_name }}/{{ item }}
  with_items: "{{ column_families_disk }}"

- name: "{{ cassandra22x_linux_user }}:{{ cassandra22x_linux_group }} is the owner/group for all rsync-hardlink-ed files of the keyspace: {{ keyspace_name }} for all column families"
  file: 
    dest: "{{ cassandra22x_data_path }}/{{ keyspace_name }}/"
    owner: "{{ cassandra22x_linux_user }}"
    group: "{{ cassandra22x_linux_group }}"
    mode: "{{ cassandra22x_cassandra_default_directory_mode }}"
    recurse: yes